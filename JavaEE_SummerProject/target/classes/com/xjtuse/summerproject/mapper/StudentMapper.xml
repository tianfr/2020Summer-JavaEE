<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xjtuse.summerproject.mapper.StudentMapper">

    <!-- 配置查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="studentMap" type="student">
        <!-- 主键字段的对应 -->
        <id property="stuId" column="student_id"></id>
        <id property="stuUsername" column="student_username"></id>
        <!-- 非主键字段的对应 -->
        <result property="stuName" column="student_name"></result>
        <result property="stuAge" column="student_age"></result>
        <result property="stuGender" column="student_gender"></result>
        <result property="stuClass" column="student_class"></result>
        <result property="stuEmail" column="student_email"></result>
        <result property="stuPassword" column="student_password"></result>
        <result property="insertDate" column="insert_date"></result>
    </resultMap>


    <!--配置查询所有-->
    <select id="findAll" resultMap="studentMap">
  	    SELECT * FROM students
    </select>

    <!--插入学生-->
    <insert id="insertStudent" parameterType="student">
        insert into students(student_id,student_name,student_age,student_gender,student_class,student_email,student_username,student_password,insert_date)
        values(#{stuId},#{stuName},#{stuAge},#{stuGender},#{stuClass},#{stuEmail},#{stuUsername},#{stuPassword},#{insertDate})
    </insert>

    <!--修改学生信息-->
    <update id="updateStudent" parameterType="student">
        update students set
        student_name=#{stuName},student_age=#{stuAge},student_gender=#{stuGender},student_class=#{stuClass},
        student_email=#{stuEmail},student_username=#{stuUsername},student_password=#{stuPassword},insert_date=#{insertDate}
        where student_id=#{stuId}
    </update>

    <!--删除学生-->
    <delete id="deleteStudent" parameterType="java.lang.String">
        delete from students where student_id = #{sid}
    </delete>
    
    <!--根据id查学生-->
    <select id="findById" parameterType="java.lang.String" resultMap="studentMap">
        select * from students where student_id = #{sid}
    </select>

    <!--根据姓名模糊查询学生-->
    <select id="findByName" parameterType="java.lang.String" resultMap="studentMap">
        <!--方式1-->
        select * from students where student_name like #{sname}
        <!--方式2-->
        <!--select * from students where student_name like '%${value}%'-->
    </select>

    <!--查询学生总数-->
    <select id="findTotal" resultType="java.lang.Integer">
        select count(student_id) from students
    </select>

</mapper>